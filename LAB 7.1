// This program will read in a group of test scores( positive integers from 1 to 100)
// from the keyboard and then calculates and outputs  the average score
// as well as the highest and lowest score. There will be a maximum of 100 scores.
// Amer Sejdic 7.1

#include <iostream>
using namespace std;

typedef int GradeType[100]; //declares a new data type, a 100 element int array 

float findAverage(const GradeType, int);  //finds average of all grades
int   findHighest(const GradeType, int);  //finds highest of all grades
int   findLowest(const GradeType, int);  //finds lowest of all grades

int main()
{
	GradeType grades;                      //the array holding the grades
	int numberOfGrades;                    //the number of grades read
	int pos;                               //array index
	int aGrade;                            //a single grade read in
	float avgOfGrades;                     //contains the average of the grades
	int highestGrade;                      //contains the highest grade
	int lowestGrade;                       //contains the lowest grade

	//Read in the values and store them in the array.
	pos = 0;
	cout << "Please input a grade from 1 to 100 (or -99 to stop)" << endl;
	cin >> aGrade;

	while (aGrade != -99)
	{
		grades[pos] = aGrade;
		pos++;
		cout << "Please input a grade from 1 to 100 (or -99 to stop)" << endl;
		cin >> aGrade;

		// Fill in the lines of code to read in and store all the grades 
		// in the array.

	}

	numberOfGrades = pos;  // Fill blank with appropriate identifier.

	//call to the function to find average

	avgOfGrades = findAverage(grades, numberOfGrades);

	cout << endl << "The average of all the grades is " << avgOfGrades
		<< endl;

	// Fill in the call to the function that calculates highest grade.
	// Assign the value it returns to the variable highestGrade.

	highestGrade = findHighest(grades, numberOfGrades);

	cout << endl << "The highest grade is " << highestGrade << endl;

	// Fill in the call to the function that calculates lowest grade.
	// Assign the value it returns to the variable lowestGrade.
	// Fill in the code to write the lowest grade to the screen.

	lowestGrade = findLowest(grades, numberOfGrades);

	cout << endl << "The lowest grade is " << lowestGrade << endl;


	system("pause");

	return 0;
}

/*************************************************************
*                     findAverage                           *
* This function receives an array of integers and its size. *
* It finds and returns the average of these numbers.        *
*************************************************************/

float findAverage(const GradeType A, int size)
// A is the name of the formal parameter used to access the array.
{
	float sum = 0;

	for (int pos = 0; pos < size; pos++)
	{
		sum = sum + A[pos];
	}
	return (sum / size);                 //returns the average
}

/*************************************************************
*                       findHighest                         *
* This function receives an array of integers and its size. *
* It finds and returns the highest value in the array.      *
*************************************************************/

int findHighest(const GradeType A, int size)
// A is the name of the formal parameter used to access the array.
{
	int highest = A[0];

	for (int pos = 1; pos < size; pos++)
	{
		if (A[pos] > highest)
			highest = A[pos];
	}
	return highest;
}

/*************************************************************
*                        findLowest                         *
* This function receives an array of integers and its size. *
* It finds and returns the lowest value in the array.       *
*************************************************************/

int findLowest(const GradeType A, int size)
// A is the name of the formal parameter used to access the array.
{
	// Fill in the code for this function.

	int lowest = A[0];

	for (int pos = 1; pos < size; pos++)
	{
		if (A[pos] < lowest)
		{
			lowest = A[pos];
		}

	}
	return lowest;
	}
