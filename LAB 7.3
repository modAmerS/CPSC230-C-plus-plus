// This program will read in prices and store them into a two-dimensional array
// It will print those prices in a table form.
// Amer Sejdic 7.3

#include <iostream>
#include <iomanip>
using namespace std;

const int  MAXROWS = 10;
const int MAXCOLS = 10;
float highest;
float lowest;
typedef float PriceType[MAXROWS][MAXCOLS];      //creates a new data type, 

//a 2D array of floats
//function prototypes
void getPrices(PriceType, int&, int&);          //gets the prices into the array
void printPrices(PriceType, int, int);          //prints the data as a table
float findHighestPrice(PriceType, int, int);
float findLowestPrice(PriceType, int, int);


int main()
{
	int rowsUsed;                                //holds number of rows used
	int colsUsed;                                //holds number of columns used

	PriceType priceTable;                        //2D array holding the prices

	getPrices(priceTable, rowsUsed, colsUsed);   //calls getPrices to fill array
	printPrices(priceTable, rowsUsed, colsUsed); //calls printPrices to display array
	cout << endl;
	highest = findHighestPrice(priceTable, rowsUsed, colsUsed);
	cout << "The highest price is " << highest << endl;
	lowest = findLowestPrice(priceTable, rowsUsed, colsUsed);
	cout << "The lowest price is " << lowest << endl;

	system("pause");
	return 0;
}



/********************************************************************
*                             getPrices                            *
* This procedure asks the user to input the number of rows and     *
* columns used.  It then asks the user to input x number of prices *
* (x = rows * columns).  This data is placed in the array.         *
********************************************************************/

void getPrices(PriceType table, int& numOfRows, int& numOfCols)

{
cout << "Please input the number of rows from 1 to  " << MAXROWS << ":\n";
cin >> numOfRows;

cout << "Please input the number of columns from 1 to  " << MAXCOLS << ":\n";
cin >> numOfCols;
cout << endl;

float input;

for (int row = 0; row < numOfRows; row++)
{
for (int col = 0; col < numOfCols; col++)
{
cout << "Please input the price of an item with 2 decimal places: " << endl;
cin >> input;

table[row][col] = input;
// Fill in the code to read and store the next value in the array.
    }
  }
}

/********************************************************************
*                          printPrices                             *
* This procedure prints the table of prices, using the information *
* stored in the array.                                             *
********************************************************************/

void printPrices(PriceType table, int numOfRows, int numOfCols)
{
cout << fixed << showpoint << setprecision(2);

for (int row = 0; row < numOfRows; row++)
{
for (int col = 0; col < numOfCols; col++)
{
float temp = table[row][col];
cout << "\t" << temp;
// Fill in the code to print the table.
}
cout << endl;

  }
}

// This function returns the highest price in the array


float findHighestPrice(PriceType table, int numOfRows, int numOfCols)
{
float highestPrice;

highestPrice = table[0][0]; // make first element the highest price

for (int row = 0; row < numOfRows; row++)
for (int col = 0; col < numOfCols; col++)
if (highestPrice < table[row][col])
highestPrice = table[row][col];

return highestPrice;
}

float findLowestPrice(PriceType table, int numOfRows, int numOfCols)
{
float lowestPrice;

lowestPrice = table[0][0]; // make first element the lowest price

for (int row = 0; row < numOfRows; row++)
for (int col = 0; col < numOfCols; col++)
if (lowestPrice > table[row][col])
lowestPrice = table[row][col];

return lowestPrice;

}
